{
  "name": "dialog",
  "dependencies": [
    "@radix-ui/react-dialog"
  ],
  "files": [
    {
      "name": "dialog.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { VariantProps, cva } from \"cva\"\nimport { X } from \"lucide-react\"\n\nimport { autoRef, cn } from \"@/lib/utils\"\n\n/* -------------------------------------------------------------------------- */\n/*                                   Dialog                                   */\n/* -------------------------------------------------------------------------- */\n\nexport const Dialog = DialogPrimitive.Root\n\n/* -------------------------------------------------------------------------- */\n/*                                DialogTrigger                               */\n/* -------------------------------------------------------------------------- */\n\nexport const DialogTrigger = DialogPrimitive.Trigger\n\n/* -------------------------------------------------------------------------- */\n/*                                DialogPortal                                */\n/* -------------------------------------------------------------------------- */\n\nexport const DialogPortal = DialogPrimitive.Portal\n\n/* -------------------------------------------------------------------------- */\n/*                                 DialogClose                                */\n/* -------------------------------------------------------------------------- */\n\nexport const DialogClose = DialogPrimitive.Close\n\n/* -------------------------------------------------------------------------- */\n/*                                DialogOverlay                               */\n/* -------------------------------------------------------------------------- */\n\nexport type DialogOverlayProps = React.ComponentPropsWithRef<\n  typeof DialogPrimitive.Overlay\n>\n\nexport const DialogOverlay = autoRef(\n  ({ className, ...props }: DialogOverlayProps) => {\n    return (\n      <DialogPrimitive.Overlay\n        className={cn(\n          \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm\",\n          \"data-[state=open]:animate-in data-[state=open]:fade-in-0\",\n          \"data-[state=closed]:animate-out data-[state=closed]:fade-out-0\",\n          className\n        )}\n        {...props}\n      />\n    )\n  }\n)\n\n/* -------------------------------------------------------------------------- */\n/*                                DialogContent                               */\n/* -------------------------------------------------------------------------- */\n\nexport const dialogContentVariants = cva({\n  base: cn(\n    \"fixed left-[50%] z-50 flex w-full translate-x-[-50%] flex-col gap-4 bg-background p-6 shadow-lg duration-200 sm:top-[50%] sm:max-h-[90%] sm:translate-y-[-50%] sm:border -sm:bottom-0\",\n    \"sm:rounded-lg md:w-full\",\n    \"sm:data-[state=open]:animate-in sm:data-[state=open]:fade-in-0 sm:data-[state=open]:zoom-in-95 sm:data-[state=open]:slide-in-from-left-1/2 sm:data-[state=open]:slide-in-from-top-[48%]\",\n    \"sm:data-[state=closed]:animate-out sm:data-[state=closed]:fade-out-0 sm:data-[state=closed]:zoom-out-95 sm:data-[state=closed]:slide-out-to-left-1/2 sm:data-[state=closed]:slide-out-to-top-[48%]\",\n    \"-sm:data-[state=closed]:slide-out-to-bottom -sm:data-[state=open]:slide-in-from-bottom -sm:data-[state=closed]:duration-300 -sm:data-[state=open]:duration-500\"\n  ),\n  variants: {\n    size: {\n      default: \"sm:max-w-lg\",\n      lg: \"sm:max-w-3xl\",\n      xl: \"sm:max-w-6xl\",\n    },\n    mobileViewport: {\n      full: \"h-screen\",\n      fit: \"-sm:max-h-[90%] -sm:border-t\",\n    },\n  },\n  defaultVariants: {\n    size: \"default\",\n    mobileViewport: \"fit\",\n  },\n})\n\nexport type DialogContentProps = React.ComponentPropsWithRef<\n  typeof DialogPrimitive.Content\n> &\n  VariantProps<typeof dialogContentVariants>\n\nexport const DialogContent = autoRef(\n  ({ className, children, size, ...props }: DialogContentProps) => {\n    return (\n      <DialogPortal>\n        <DialogOverlay>\n          <DialogPrimitive.Content\n            className={cn(dialogContentVariants({ size }))}\n          >\n            {children}\n            <DialogPrimitive.Close\n              className={cn(\n                \"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100\",\n                \"focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none\",\n                \"data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\"\n              )}\n            >\n              <X className=\"h-4 w-4\" />\n              <span className=\"sr-only\">Close</span>\n            </DialogPrimitive.Close>\n          </DialogPrimitive.Content>\n        </DialogOverlay>\n      </DialogPortal>\n    )\n  }\n)\n\n/* -------------------------------------------------------------------------- */\n/*                                DialogHeader                                */\n/* -------------------------------------------------------------------------- */\n\nexport type DialogHeaderProps = React.ComponentPropsWithRef<\"div\">\n\nexport const DialogHeader = autoRef(\n  ({ className, ...props }: DialogHeaderProps) => {\n    return (\n      <div\n        className={cn(\n          \"flex flex-col space-y-1.5 text-center sm:text-left\",\n          className\n        )}\n        {...props}\n      />\n    )\n  }\n)\n\n/* -------------------------------------------------------------------------- */\n/*                                 DialogBody                                 */\n/* -------------------------------------------------------------------------- */\n\nexport type DialogBodyProps = React.ComponentPropsWithRef<\"div\">\n\nexport const DialogBody = autoRef(\n  ({ className, ...props }: DialogBodyProps) => (\n    <div\n      className={cn(\"flex grow flex-col gap-4 overflow-y-auto\", className)}\n      {...props}\n    />\n  )\n)\n\n/* -------------------------------------------------------------------------- */\n/*                                DialogFooter                                */\n/* -------------------------------------------------------------------------- */\n\nexport type DialogFooterProps = React.ComponentPropsWithRef<\"div\">\n\nexport const DialogFooter = autoRef(\n  ({ className, ...props }: DialogFooterProps) => (\n    <div\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end sm:gap-0 sm:space-x-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\n\n/* -------------------------------------------------------------------------- */\n/*                                 DialogTitle                                */\n/* -------------------------------------------------------------------------- */\n\nexport type DialogTitleProps = React.ComponentPropsWithRef<\n  typeof DialogPrimitive.Title\n>\n\nexport const DialogTitle = autoRef(\n  ({ className, ...props }: DialogTitleProps) => {\n    return (\n      <DialogPrimitive.Title\n        className={cn(\n          \"text-lg font-semibold leading-none tracking-tight\",\n          className\n        )}\n        {...props}\n      />\n    )\n  }\n)\n\n/* -------------------------------------------------------------------------- */\n/*                              DialogDescription                             */\n/* -------------------------------------------------------------------------- */\n\nexport type DialogDescriptionProps = React.ComponentPropsWithRef<\n  typeof DialogPrimitive.Description\n>\n\nexport const DialogDescription = autoRef(\n  ({ className, ...props }: DialogDescriptionProps) => {\n    return (\n      <DialogPrimitive.Description\n        className={cn(\"text-sm text-muted-foreground\", className)}\n        {...props}\n      />\n    )\n  }\n)\n"
    }
  ],
  "type": "components:ui"
}