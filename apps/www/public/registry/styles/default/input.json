{
  "name": "input",
  "files": [
    {
      "name": "input.tsx",
      "content": "\"use client\"\n\nimport React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva } from \"cva\"\nimport { Loader2 } from \"lucide-react\"\n\nimport { autoRef, cn } from \"@/lib/utils\"\n\nexport const inputVariants = cva({\n  base: cn(\n    \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-[16px] focus-visible:ring-offset-2\",\n    \"file:border-0 file:bg-transparent file:text-sm file:font-medium\",\n    \"ring-offset-background\",\n    \"placeholder:text-sm placeholder:text-muted-foreground\",\n    \"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring\",\n    \"disabled:cursor-not-allowed disabled:opacity-50\"\n  ),\n})\n\nexport type InputProps = React.ComponentPropsWithRef<\"input\"> & {\n  icon?: boolean\n  isLoading?: boolean\n  onEnterPress?: () => void\n  classNameInput?: string\n}\n\nexport const Input = autoRef(\n  ({\n    className,\n    classNameInput,\n    isLoading,\n    icon,\n    onEnterPress,\n    onKeyDown,\n    ...props\n  }: InputProps) => {\n    function handleEnterPress(e: React.KeyboardEvent<HTMLInputElement>) {\n      if (onEnterPress && e.key === \"Enter\") {\n        onEnterPress()\n      }\n\n      onKeyDown?.(e)\n    }\n\n    return (\n      <div className={cn(\"relative flex h-10 items-center\", className)}>\n        <input\n          className={cn(inputVariants(), (icon || isLoading) && \"sm:pl-9\")}\n          onKeyDown={handleEnterPress}\n          {...props}\n        />\n        {icon && !isLoading && (\n          <Slot className=\"absolute left-[8px] h-[18px] w-[18px] text-muted-foreground -sm:hidden\">\n            {icon}\n          </Slot>\n        )}\n        {isLoading && (\n          <Loader2 className=\"absolute left-[8px] h-[18px] w-[18px] animate-spin text-muted-foreground\" />\n        )}\n      </div>\n    )\n  }\n)\n"
    }
  ],
  "type": "components:ui"
}